{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Menu.jsx","components/Questions.jsx","components/Result.jsx","components/App.jsx","index.js"],"names":["Header","className","Footer","Menu","props","getCategories","a","axios","get","response","categories","data","trivia_categories","setState","startQuiz","history","push","state","selectedCategory","value","selectCategory","option","difficulty","numOfQues","categoryQuestions","category_question_count","total_question_count","total_easy_question_count","total_medium_question_count","total_hard_question_count","all","easy","medium","hard","newMax","setnumOfQues","handleChange","action","name","changeDifficulty","console","log","handleInputChange","inputValue","actionMeta","group","groupEnd","this","options","maxQuestions","i","label","htmlFor","isSearchable","defaultValue","length","map","element","id","onChange","onInputChange","type","onClick","disabled","React","Component","withRouter","Questions","getQuestions","match","params","categoryID","results","response_code","question","optionList","shuffle","incorrect_answers","correct_answer","loading","questions","nextQuestion","number","answer","checkAnswer","event","ind","target","changeScore","score","showResults","dangerouslySetInnerHTML","__html","index","key","classNames","hoverEffectEnable","hoverEffectDisable","correct","wrong","undefined","to","Result","useHistory","resetState","style","float","App","useState","setScore","setDifficulty","path","exact","currScore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2d96f4d.chunk.js","sourcesContent":["import React from 'react';\nfunction Header() {\n    return <div className=\"top\">\n        <h1 className=\"heading\">Trivia Quiz</h1>\n        <p>Powered by Trivia API</p>\n    </div>\n}\nexport default Header;","import React from 'react';\nfunction Footer() {\n    // eslint-disable-next-line jsx-a11y/accessible-emoji\n    return <div className=\"footer\">Created with ❤️ by Khushbu</div>\n}\n\nexport default Footer;","import React from \"react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      selectedCategory: \"\",\n      categoryQuestions: { all: 0, easy: 0, medium: 0, hard: 0 },\n    };\n  }\n\n  componentDidMount() {\n    this.getCategories();\n  }\n  getCategories = async () => {\n    const response = await axios.get(`https://opentdb.com/api_category.php`);\n    let categories = response.data.trivia_categories;\n    // console.log(categories);\n    this.setState({\n      categories: [...categories],\n    });\n  };\n\n  /**\n   * Directing to '/quiz'\n   */\n  startQuiz = () => {\n    this.props.history.push(`/quiz/${this.state.selectedCategory.value}`);\n  };\n\n  selectCategory = async (option) => {\n    const { difficulty, numOfQues } = this.props;\n    this.setState(\n      {\n        selectedCategory: option,\n      },\n      async () => {\n        const response = await axios.get(\n          `https://opentdb.com/api_count.php?category=${this.state.selectedCategory.value}`\n        );\n        let categoryQuestions = response.data.category_question_count;\n        const {\n          total_question_count,\n          total_easy_question_count,\n          total_medium_question_count,\n          total_hard_question_count,\n        } = categoryQuestions;\n\n        this.setState({\n          categoryQuestions: {\n            all: total_question_count,\n            easy: total_easy_question_count,\n            medium: total_medium_question_count,\n            hard: total_hard_question_count,\n          },\n        });\n        let newMax =\n          categoryQuestions[\n            `total_${difficulty ? difficulty + \"_\" : \"\"}question_count`\n          ];\n        if (newMax < numOfQues) this.props.setnumOfQues(newMax);\n      }\n    );\n  };\n  handleChange = (option, action) => {\n    // console.log(option);\n    const { categoryQuestions } = this.state;\n    const { numOfQues } = this.props;\n    if (action.name === \"difficulty\") {\n      this.props.changeDifficulty(option.value);\n      let newMax = categoryQuestions[option.value || \"all\"];\n      console.log(newMax);\n      if (newMax < numOfQues) this.props.setnumOfQues(newMax);\n    } else {\n      this.props.setnumOfQues(option.value);\n    }\n  };\n  handleInputChange = (inputValue, actionMeta) => {\n    console.group(\"Input Changed\");\n    console.log(inputValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n  };\n  render() {\n    const { difficulty, numOfQues } = this.props;\n    let options = [];\n    let maxQuestions = this.state.categoryQuestions[difficulty || \"all\"];\n    for (let i = 5; i <= maxQuestions; i += 5) {\n      options.push({ value: i, label: i });\n    }\n    if (maxQuestions % 5 !== 0) {\n      options.push({ value: maxQuestions, label: maxQuestions });\n    }\n    return (\n      <div className=\"menu\">\n        <div className=\"select-option\">\n          <label htmlFor=\"category\">Category</label>\n          <Select\n            className=\"dropdown\"\n            isSearchable\n            value={this.state.selectedCategory}\n            defaultValue={{ value: \"\", label: \"All\" }}\n            name=\"category\"\n            options={\n              this.state.categories.length\n                ? this.state.categories.map((element) => {\n                    return { value: element.id, label: element.name };\n                  })\n                : []\n            }\n            onChange={this.selectCategory}\n          />\n        </div>\n        <div className=\"select-option\">\n          <label htmlFor=\"difficulty\">Difficulty</label>\n          <Select\n            className=\"dropdown\"\n            isSearchable\n            defaultValue={{ value: \"\", label: \"All\" }}\n            name=\"difficulty\"\n            options={[\n              { value: \"\", label: \"All\" },\n              { value: \"easy\", label: \"Easy\" },\n              { value: \"medium\", label: \"Medium\" },\n              { value: \"hard\", label: \"Hard\" },\n            ]}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"select-option\">\n          <label htmlFor=\"questions\">No. of Questions</label>\n          <CreatableSelect\n            className=\"dropdown\"\n            isSearchable\n            value={{ value: numOfQues, label: numOfQues }}\n            name=\"questions\"\n            options={options}\n            onChange={this.handleChange}\n            onInputChange={this.handleInputChange}\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.startQuiz}\n          disabled={!this.state.selectedCategory}\n        >\n          Start\n        </button>\n      </div>\n    );\n  }\n}\nexport default withRouter(Menu);\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { shuffle } from \"underscore\";\nimport axios from \"axios\";\nimport classNames from \"classnames\";\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [],\n      loading: true,\n      response_code: \"\",\n      number: 0,\n      answer: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = async () => {\n    const { numOfQues, difficulty } = this.props;\n    const response = await axios.get(\n      `https://opentdb.com/api.php?amount=${numOfQues}&category=${\n        this.props.match.params.categoryID\n      }&difficulty=${difficulty || \"\"}`\n    );\n\n    let { results, response_code } = response.data;\n    results = results.map((question) => {\n      const optionList = shuffle([\n        ...question.incorrect_answers,\n        question.correct_answer,\n      ]);\n      question[\"optionList\"] = optionList;\n      return question;\n    });\n    this.setState({\n      loading: false,\n      questions: results,\n      response_code: response_code,\n    });\n\n    // console.log(response);\n  };\n\n  nextQuestion = () => {\n    this.setState({\n      number: this.state.number + 1,\n      answer: null,\n    });\n  };\n\n  checkAnswer = (event) => {\n    const { questions, number } = this.state;\n    const ind = event.target.value;\n    const answer = questions[number].optionList[ind];\n    this.setState({\n      answer: answer,\n    });\n    if (answer === questions[number].correct_answer)\n      this.props.changeScore(this.props.score + 1);\n  };\n\n  showResults = () => {\n    this.props.history.push(`/result`);\n  };\n\n  render() {\n    const { response_code, loading, questions, number, answer } = this.state;\n\n    return loading ? (\n      <h1>loading...</h1>\n    ) : response_code === 0 ? (\n      <div className=\"quiz\">\n        <h1\n          dangerouslySetInnerHTML={{ __html: `${questions[number].question}` }}\n        ></h1>\n\n        <ul>\n          {questions[number].optionList.map((option, index) => (\n            <div\n              key={index}\n              className={classNames(\"option\", {\n                hoverEffectEnable: answer === null,\n                hoverEffectDisable: answer !== null,\n                correct: answer && questions[number].correct_answer === option,\n                wrong:\n                  answer &&\n                  option === answer &&\n                  questions[number].correct_answer !== option,\n              })}\n            >\n              <li\n                onClick={answer === null ? this.checkAnswer : undefined}\n                value={index}\n                dangerouslySetInnerHTML={{ __html: `${option} ` }}\n              ></li>\n              {answer && questions[number].correct_answer === option ? (\n                <i className=\"fas fa-check-circle\"></i>\n              ) : option === answer ? (\n                <i className=\"fas fa-times-circle\"></i>\n              ) : (\n                \"\"\n              )}\n            </div>\n          ))}\n        </ul>\n\n        {number < questions.length - 1 ? (\n          <button className=\"button\" onClick={this.nextQuestion}>\n            Next Question\n          </button>\n        ) : (\n          <button className=\"button\" onClick={this.showResults}>\n            Results\n          </button>\n        )}\n      </div>\n    ) : (\n      <Redirect to=\"/\" />\n    );\n  }\n}\n\nexport default withRouter(Questions);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Result(props) {\n  const history = useHistory();\n  let restart = () => {\n    props.resetState();\n    history.push(\"/\");\n  };\n  return (\n    <div className=\"result\">\n      <h2>Congratulations! You have scored</h2>\n      <h1>\n        {props.score} out of {props.numOfQues}\n      </h1>\n      <button className=\"button\" onClick={restart} style={{ float: \"none\" }}>\n        Play Again\n      </button>\n    </div>\n  );\n}\n\nexport default Result;\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Menu from \"./Menu\";\nimport Questions from \"./Questions\";\nimport Result from \"./Result\";\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState(\"\");\n  const [numOfQues, setnumOfQues] = useState(10);\n\n  let changeDifficulty = (difficulty) => {\n    setDifficulty(difficulty);\n  };\n  let resetState = () => {\n    setDifficulty(\"\");\n    setScore(0);\n    setnumOfQues(10);\n  };\n  return (\n    <div className=\"container\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Menu\n            difficulty={difficulty}\n            changeDifficulty={changeDifficulty}\n            setnumOfQues={setnumOfQues}\n            numOfQues={numOfQues}\n          />\n        </Route>\n        <Route path=\"/quiz/:categoryID\">\n          <Questions\n            score={score}\n            changeScore={(currScore) => setScore(currScore)}\n            difficulty={difficulty}\n            numOfQues={numOfQues}\n          />\n        </Route>\n        <Route path=\"/result\">\n          <Result score={score} resetState={resetState} numOfQues={numOfQues} />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}