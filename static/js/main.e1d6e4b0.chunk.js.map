{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Menu.jsx","components/Questions.jsx","components/Result.jsx","components/App.jsx","index.js"],"names":["Header","className","Footer","Menu","props","getCategories","a","axios","get","response","categories","data","trivia_categories","setState","selectedCategory","id","startQuiz","history","push","state","selectCategory","event","category","target","value","difficulty","this","htmlFor","name","onChange","length","map","element","key","changeDifficulty","type","onClick","React","Component","withRouter","Questions","getQuestions","match","params","categoryID","results","response_code","question","optionList","shuffle","incorrect_answers","correct_answer","loading","questions","nextQuestion","number","answer","checkAnswer","ind","changeScore","score","showResults","option","index","undefined","to","Result","useHistory","resetState","App","useState","setScore","setDifficulty","path","exact","e","currScore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1d6e4b0.chunk.js","sourcesContent":["import React from 'react';\nfunction Header() {\n    return <div className=\"top\">\n        <h1 className=\"heading\">Trivia Quiz</h1>\n        <p>Powered by Trivia API</p>\n    </div>\n}\nexport default Header;","import React from 'react';\nfunction Footer() {\n    // eslint-disable-next-line jsx-a11y/accessible-emoji\n    return <div>Created with ❤️ by Khushbu</div>\n}\n\nexport default Footer;","import React from 'react';\n// import Select from 'react-select';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            categories: [],\n            selectedCategory: '',\n            difficulty: '',\n        }\n    }\n\n    componentDidMount() {\n        this.getCategories();\n    }\n    getCategories = async () => {\n        const response = await axios.get(`https://opentdb.com/api_category.php`);\n        let categories = response.data.trivia_categories;\n        // console.log(categories);\n        this.setState({\n            categories: [...categories],\n            selectedCategory: categories[0].id,\n        })\n    }\n\n    /**\n     * Directing to '/quiz'  \n     */\n    startQuiz = () => {\n        this.props.history.push(`/quiz/${this.state.selectedCategory}`);\n    }\n\n    selectCategory = (event) => {\n        const category = event.target.value;\n        this.setState({\n            selectedCategory: category,\n        })\n    }\n    render() {\n        return <div className=\"menu\">\n            <div>\n                <label htmlFor=\"category\">Category</label>\n                <select name=\"category\" className=\"dropdown\" value={this.state.selectedCategory} onChange={this.selectCategory}>\n                    {this.state.categories.length && this.state.categories.map(element => {\n                        return <option value={element.id} key={element.id}>{element.name}</option>\n                    })}\n                </select>\n            </div>\n            <div>\n                <label htmlFor=\"difficulty\">Difficulty</label>\n                <select name=\"difficulty\" className=\"dropdown\" onChange={this.props.changeDifficulty}>\n                    <option value=\"\">All</option>\n                    <option value=\"easy\">Easy</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hard\">Hard</option>\n                </select>\n            </div>\n            <button type=\"button\" className=\"button\" onClick={this.startQuiz}>Start</button>\n        </div>\n    }\n}\nexport default withRouter(Menu);","import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { shuffle } from 'underscore';\nimport axios from 'axios';\nimport '../question.css';\n// import classNames from 'classnames';\n\nclass Questions extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            loading: true,\n            response_code: '',\n            number: 0,\n            answer: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getQuestions();\n    }\n\n    getQuestions = async () => {\n        let response;\n        if (this.props.difficulty) {\n            response = await axios.get(`https://opentdb.com/api.php?amount=10&category=${this.props.match.params.categoryID}&difficulty=${this.props.difficulty}`);\n        } else {\n            response = await axios.get(`https://opentdb.com/api.php?amount=10&category=${this.props.match.params.categoryID}`);\n        }\n        let { results, response_code } = response.data;\n        results = results.map((question) => {\n            const optionList = shuffle([...question.incorrect_answers, question.correct_answer]);\n            question['optionList'] = optionList;\n            return question;\n        })\n        this.setState({\n            loading: false,\n            questions: results,\n            response_code: response_code,\n        })\n\n        // console.log(response);\n    }\n\n    nextQuestion = () => {\n        this.setState({\n            number: this.state.number + 1,\n            answer: null,\n        });\n    }\n\n    checkAnswer = (event) => {\n        const { questions, number } = this.state;\n        const ind = event.target.value;\n        // console.log(questions[number].optionList[ind]);\n\n        const answer = questions[number].optionList[ind];\n        this.setState({\n            answer: answer,\n        })\n        if (answer === questions[number].correct_answer)\n            this.props.changeScore(this.props.score + 1)\n    }\n\n    showResults = () => {\n        this.props.history.push(`/result`);\n    }\n\n    render() {\n\n        // console.log(this.props);\n        const { response_code, loading, questions, number, answer } = this.state;\n        // let resultClass = classNames({\n        //     // \"correct\": this.state.answer === this.state.questions[this.state.number].correct_answer,\n        //     // \"wrong\": this.state.answer !== this.state.questions[this.state.number].correct_answer\n        // });\n\n        return (loading ? (<h1>loading...</h1>) : response_code === 0 ?\n\n            <div className=\"quiz\">\n                <h1>{questions[number].question}</h1>\n\n                <ul>\n                    {questions[number].optionList.map((option, index) =>\n                        <li key={index} onClick={answer === null ? this.checkAnswer : undefined} className={answer && (questions[number].correct_answer === option ? 'correct' : option === answer ? 'wrong' : '')} value={index}>\n                            {option}\n                            {answer && (questions[number].correct_answer === option) ? <i className=\"fas fa-check-circle\"></i> : option === answer ? <i className=\"fas fa-times-circle\"></i> : ''}\n                        </li>\n                    )}\n                </ul>\n\n                {/* {answer && <div className=\"answer\">{answer === questions[number].correct_answer ? 'Correct!' : 'Incorrect!'}</div>} */}\n\n                {number < questions.length - 1 ? <button className=\"button\" onClick={this.nextQuestion}>Next Question</button> : <button className=\"button\" onClick={this.showResults}>Results</button>}\n\n            </div>\n            : <Redirect to=\"/\" />)\n\n    }\n}\n\nexport default withRouter(Questions);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Result(props) {\n    // const params = useParams();\n    const history = useHistory();\n    // console.log(params.score);\n    let restart = () => {\n        props.resetState();\n        history.push('/');\n    }\n    return <div className=\"result\">\n        <h2>Congratulations! You have scored</h2>\n        <h1>{props.score} out of 10</h1>\n        <button className=\"button\" onClick={restart}>Play Again</button>\n    </div>\n}\n\nexport default Result;","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Menu from './Menu';\nimport Questions from './Questions';\nimport Result from './Result';\n\n\nfunction App() {\n\n    const [score, setScore] = useState(0);\n    const [difficulty, setDifficulty] = useState('');\n\n    let changeDifficulty = (e) => {\n        setDifficulty(e.target.value)\n    }\n    let resetState = () => {\n        setDifficulty('');\n        setScore(0);\n    }\n    return <div className=\"container\">\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact><Menu difficulty={difficulty} changeDifficulty={changeDifficulty} /></Route>\n            <Route path=\"/quiz/:categoryID\"><Questions score={score} changeScore={(currScore) => setScore(currScore)} difficulty={difficulty} /></Route>\n            <Route path=\"/result\"><Result score={score} resetState={resetState} /></Route>\n        </Switch>\n        <Footer />\n    </div>\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss'\n\nReactDOM.render(<HashRouter>\n  <App />\n</HashRouter>, document.getElementById('root'));"],"sourceRoot":""}